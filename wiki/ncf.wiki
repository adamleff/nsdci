#summary Network Cache Flush api
#labels Phase-Implementation

= Network Cache Flush (ncf)=
nsdci/dcicommon/flush.c

== Introduction ==
The Network Cache Flush api (ncf) is used to send and receive cache flush messages across a network.  It flushes named caches created by the [cache] api.  You must set up a "ncf server" to broadcast the flush and a "ncf client" to receive the flush. The api is only exposed when properly configured.  See the "Configuration" section for more information.

Addition Reading: [broadcaster], [receiver], [nsob].

==TCL API ==

===ncf.addFlushCache===
Used to register named caches on the client for flush-on-connect. The entire cache will be flushed. This is useful if there are n-tier ncf repeaters in the topology. If a ncf repeater was down, it may have not forwarded ncf messages to its clients. This will ensure out of date cache entries are not used by the client after a reconnect. This is default behavior for clients connected to ncf repeaters.

*ncf.addFlushCache* _cache_

|| *Argument* || *Description* ||
|| _cache_ || String. The named cache to be registerd. ||


|| *Result* || *Description* ||
|| {{{NULL}}} || Success. The cache was registered. ||
|| {{{TCL_ERROR}}} || Failure. An error occurred. See the server log for more information. ||

{{{
--------------------------------------------------------------------------------
}}}

===ncf.debug===
Used to retrieve the current debug value, or to set a new debug value.

*ncf.debug* _boolean_

|| *Argument* || *Description* ||
|| _?boolean?_ || Boolean. Optional. Specifies whether or not debugging is enabled. ||


|| *Result* || *Description* ||
|| {{{1}}} || Success. Returned if a boolean was specified. ||
|| {{{BOOLEAN}}} || Success. If a boolean was not specified, then the current debug value is returned. ||

{{{
--------------------------------------------------------------------------------
}}}

ncf.flushOnConnect ncf.send ncf.sendAll

==Configuration==

====Server:====
{{{
    ns_section "ns/server/$server/module/dci/broadcast"
        ns_param debug 1
        ns_param timeoutinterval 2

    ns_section "ns/server/$server/module/dci/ncf/clients"
        ns_param frontend $frontendAddress:$frontendReceiverPort
        ns_param tool $toolAddress:$toolReceiverPort

    ns_section "ns/server/$server/module/dci/ncf"
        ns_param debug 1

    ns_section "ns/server/$server/module/dci/nfs"
        ns_param debug 1
}}}
====Client:====
{{{
    ns_section "ns/server/$server/module/dci/receiver"
        ns_param address $address
        ns_param port $receiverPort

    ns_section "ns/server/$server/module/dci/ncf"
        ns_param debug 1
        ns_param client 1
}}}

==Usage==